//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/_CUSTOM_ASSETS/_EYEAssets/Inputs/EYEInputControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @EYEInputControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @EYEInputControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""EYEInputControls"",
    ""maps"": [
        {
            ""name"": ""FlyingCar"",
            ""id"": ""27a9d13c-2e17-44f2-9dea-fcaad2b7837a"",
            ""actions"": [
                {
                    ""name"": ""Elevation"",
                    ""type"": ""Button"",
                    ""id"": ""dc5ab92a-5817-4969-8ce5-7e180bc3120f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""388ef416-e868-4c24-a1f7-c52787447f73"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""bbe34674-56e7-436a-9d78-7c065a057b52"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""2a9180ec-24c2-4201-b7f6-3ebeef2aee31"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""cbefcc27-dfa8-42da-8978-1c859b3767d6"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""bf33df48-97d8-4b3f-a45f-e01f7b0a83f2"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XBOX"",
                    ""id"": ""2a7bb844-c702-4240-b345-8b83f85b15f0"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d7caf786-7ae9-43de-879b-72e6d19d8f58"",
                    ""path"": ""<XInputController>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5f755549-13b9-4ecf-80c0-bdbb940db532"",
                    ""path"": ""<XInputController>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""34a02771-8d40-4551-9574-256036671cbf"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a8081160-85a8-4431-b219-767591135bec"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5bdc16e2-fac7-4269-b677-353b120f7341"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c3dd98bb-7cdb-4453-9b52-31bdbd5eb3c6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""13685ff6-ec02-4ebd-a15d-3cbca611a941"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XBOX"",
                    ""id"": ""b0e58bbe-344b-4bba-b46b-18ce3efd0e33"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a6e6ad50-fc1d-4379-b97a-becd6147003f"",
                    ""path"": ""<XInputController>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d04a60a5-2b0a-47c6-9c09-1997b2914861"",
                    ""path"": ""<XInputController>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""603a5ae8-a1f8-481b-9536-db300fa762d1"",
                    ""path"": ""<XInputController>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""56303733-b491-4494-b214-cecd6374d3cc"",
                    ""path"": ""<XInputController>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XBOX"",
                    ""id"": ""b4128c3b-e191-42dc-8879-d3339d28a1c3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""19cdf69c-9432-4b71-ba71-6a95d2d85545"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d402c07c-b11e-4740-af30-aa544eb7a4fc"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c3fd2a2b-8be6-4b89-bd8f-898fb9648d83"",
                    ""path"": ""<XInputController>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2af0cac1-37a0-4a95-8d83-8f50d0503a50"",
                    ""path"": ""<XInputController>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""7d0d462f-45a6-4ddb-bb80-b6c54af9009f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b40a9792-896f-4149-b97e-2b84d0a84477"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6d0a8653-7161-485e-8641-a7526782cfb4"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""72e332ce-82fa-46f7-b05a-1a71776fe44d"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5269d8d7-131f-4927-b363-785890394c1f"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Player"",
            ""id"": ""b8d77d92-0f10-4d12-a9db-996765c47af5"",
            ""actions"": [
                {
                    ""name"": ""MovePlayer"",
                    ""type"": ""Button"",
                    ""id"": ""282b38ce-325a-4afd-9364-05e23679e323"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotatePlayer"",
                    ""type"": ""Button"",
                    ""id"": ""718cf445-e9a0-4783-9010-1025d459a380"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0b235302-a753-4524-b371-418c05141363"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bc8fd2c-97dc-4501-aa92-3ed9e2106eda"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotatePlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SpaceFlight"",
            ""id"": ""5f69af09-f165-4115-a5c5-aade8b05fb0d"",
            ""actions"": [
                {
                    ""name"": ""Thrusters"",
                    ""type"": ""Button"",
                    ""id"": ""15b74f87-485e-49a4-b893-d8ac045366cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pitch"",
                    ""type"": ""Button"",
                    ""id"": ""4a8114d6-96fd-4bf3-800a-20f8fad8bfe1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""962670cc-4450-42b2-b683-9a1c5fadce74"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Button"",
                    ""id"": ""12af788d-8c07-42da-a01d-0f29066d1b79"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""48b82dbe-8de6-4b76-8eb1-15ab25784ee8"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thrusters"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""XBOX"",
                    ""id"": ""a73b3d8d-ef0e-47d5-b998-a440e63c3749"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c0d344e9-403f-4028-b34e-58543fc4ae5b"",
                    ""path"": ""<XInputController>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""775c5f86-8e8b-49a5-84a9-7631bc5da664"",
                    ""path"": ""<XInputController>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XBOX"",
                    ""id"": ""dbd45184-8b8d-4966-8e67-dd5f4deeb25d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""082b9f0d-831f-4f92-b888-4f4e240142c3"",
                    ""path"": ""<XInputController>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ad2cdf6b-f528-461b-b0f9-4711e2f8f4d8"",
                    ""path"": ""<XInputController>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""c245ad9c-9e24-42dd-abc7-d75bd5ab8765"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b59e066d-6662-4569-9f81-e560f4e237b6"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4b22bb7a-0aaf-413f-a896-9136286c8dab"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // FlyingCar
        m_FlyingCar = asset.FindActionMap("FlyingCar", throwIfNotFound: true);
        m_FlyingCar_Elevation = m_FlyingCar.FindAction("Elevation", throwIfNotFound: true);
        m_FlyingCar_Movement = m_FlyingCar.FindAction("Movement", throwIfNotFound: true);
        m_FlyingCar_Rotation = m_FlyingCar.FindAction("Rotation", throwIfNotFound: true);
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_MovePlayer = m_Player.FindAction("MovePlayer", throwIfNotFound: true);
        m_Player_RotatePlayer = m_Player.FindAction("RotatePlayer", throwIfNotFound: true);
        // SpaceFlight
        m_SpaceFlight = asset.FindActionMap("SpaceFlight", throwIfNotFound: true);
        m_SpaceFlight_Thrusters = m_SpaceFlight.FindAction("Thrusters", throwIfNotFound: true);
        m_SpaceFlight_Pitch = m_SpaceFlight.FindAction("Pitch", throwIfNotFound: true);
        m_SpaceFlight_Roll = m_SpaceFlight.FindAction("Roll", throwIfNotFound: true);
        m_SpaceFlight_Yaw = m_SpaceFlight.FindAction("Yaw", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FlyingCar
    private readonly InputActionMap m_FlyingCar;
    private List<IFlyingCarActions> m_FlyingCarActionsCallbackInterfaces = new List<IFlyingCarActions>();
    private readonly InputAction m_FlyingCar_Elevation;
    private readonly InputAction m_FlyingCar_Movement;
    private readonly InputAction m_FlyingCar_Rotation;
    public struct FlyingCarActions
    {
        private @EYEInputControls m_Wrapper;
        public FlyingCarActions(@EYEInputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Elevation => m_Wrapper.m_FlyingCar_Elevation;
        public InputAction @Movement => m_Wrapper.m_FlyingCar_Movement;
        public InputAction @Rotation => m_Wrapper.m_FlyingCar_Rotation;
        public InputActionMap Get() { return m_Wrapper.m_FlyingCar; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FlyingCarActions set) { return set.Get(); }
        public void AddCallbacks(IFlyingCarActions instance)
        {
            if (instance == null || m_Wrapper.m_FlyingCarActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_FlyingCarActionsCallbackInterfaces.Add(instance);
            @Elevation.started += instance.OnElevation;
            @Elevation.performed += instance.OnElevation;
            @Elevation.canceled += instance.OnElevation;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
        }

        private void UnregisterCallbacks(IFlyingCarActions instance)
        {
            @Elevation.started -= instance.OnElevation;
            @Elevation.performed -= instance.OnElevation;
            @Elevation.canceled -= instance.OnElevation;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
        }

        public void RemoveCallbacks(IFlyingCarActions instance)
        {
            if (m_Wrapper.m_FlyingCarActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IFlyingCarActions instance)
        {
            foreach (var item in m_Wrapper.m_FlyingCarActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_FlyingCarActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public FlyingCarActions @FlyingCar => new FlyingCarActions(this);

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_MovePlayer;
    private readonly InputAction m_Player_RotatePlayer;
    public struct PlayerActions
    {
        private @EYEInputControls m_Wrapper;
        public PlayerActions(@EYEInputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MovePlayer => m_Wrapper.m_Player_MovePlayer;
        public InputAction @RotatePlayer => m_Wrapper.m_Player_RotatePlayer;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @MovePlayer.started += instance.OnMovePlayer;
            @MovePlayer.performed += instance.OnMovePlayer;
            @MovePlayer.canceled += instance.OnMovePlayer;
            @RotatePlayer.started += instance.OnRotatePlayer;
            @RotatePlayer.performed += instance.OnRotatePlayer;
            @RotatePlayer.canceled += instance.OnRotatePlayer;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @MovePlayer.started -= instance.OnMovePlayer;
            @MovePlayer.performed -= instance.OnMovePlayer;
            @MovePlayer.canceled -= instance.OnMovePlayer;
            @RotatePlayer.started -= instance.OnRotatePlayer;
            @RotatePlayer.performed -= instance.OnRotatePlayer;
            @RotatePlayer.canceled -= instance.OnRotatePlayer;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // SpaceFlight
    private readonly InputActionMap m_SpaceFlight;
    private List<ISpaceFlightActions> m_SpaceFlightActionsCallbackInterfaces = new List<ISpaceFlightActions>();
    private readonly InputAction m_SpaceFlight_Thrusters;
    private readonly InputAction m_SpaceFlight_Pitch;
    private readonly InputAction m_SpaceFlight_Roll;
    private readonly InputAction m_SpaceFlight_Yaw;
    public struct SpaceFlightActions
    {
        private @EYEInputControls m_Wrapper;
        public SpaceFlightActions(@EYEInputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Thrusters => m_Wrapper.m_SpaceFlight_Thrusters;
        public InputAction @Pitch => m_Wrapper.m_SpaceFlight_Pitch;
        public InputAction @Roll => m_Wrapper.m_SpaceFlight_Roll;
        public InputAction @Yaw => m_Wrapper.m_SpaceFlight_Yaw;
        public InputActionMap Get() { return m_Wrapper.m_SpaceFlight; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SpaceFlightActions set) { return set.Get(); }
        public void AddCallbacks(ISpaceFlightActions instance)
        {
            if (instance == null || m_Wrapper.m_SpaceFlightActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SpaceFlightActionsCallbackInterfaces.Add(instance);
            @Thrusters.started += instance.OnThrusters;
            @Thrusters.performed += instance.OnThrusters;
            @Thrusters.canceled += instance.OnThrusters;
            @Pitch.started += instance.OnPitch;
            @Pitch.performed += instance.OnPitch;
            @Pitch.canceled += instance.OnPitch;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @Yaw.started += instance.OnYaw;
            @Yaw.performed += instance.OnYaw;
            @Yaw.canceled += instance.OnYaw;
        }

        private void UnregisterCallbacks(ISpaceFlightActions instance)
        {
            @Thrusters.started -= instance.OnThrusters;
            @Thrusters.performed -= instance.OnThrusters;
            @Thrusters.canceled -= instance.OnThrusters;
            @Pitch.started -= instance.OnPitch;
            @Pitch.performed -= instance.OnPitch;
            @Pitch.canceled -= instance.OnPitch;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @Yaw.started -= instance.OnYaw;
            @Yaw.performed -= instance.OnYaw;
            @Yaw.canceled -= instance.OnYaw;
        }

        public void RemoveCallbacks(ISpaceFlightActions instance)
        {
            if (m_Wrapper.m_SpaceFlightActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISpaceFlightActions instance)
        {
            foreach (var item in m_Wrapper.m_SpaceFlightActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SpaceFlightActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SpaceFlightActions @SpaceFlight => new SpaceFlightActions(this);
    public interface IFlyingCarActions
    {
        void OnElevation(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
    }
    public interface IPlayerActions
    {
        void OnMovePlayer(InputAction.CallbackContext context);
        void OnRotatePlayer(InputAction.CallbackContext context);
    }
    public interface ISpaceFlightActions
    {
        void OnThrusters(InputAction.CallbackContext context);
        void OnPitch(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnYaw(InputAction.CallbackContext context);
    }
}
